/****************************************************************************
** Meta object code from reading C++ file 'login1interface.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.6.3)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "login1interface.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'login1interface.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.6.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_OrgFreedesktopLogin1ManagerInterface_t {
    QByteArrayData data[78];
    char stringdata0[1023];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OrgFreedesktopLogin1ManagerInterface_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OrgFreedesktopLogin1ManagerInterface_t qt_meta_stringdata_OrgFreedesktopLogin1ManagerInterface = {
    {
QT_MOC_LITERAL(0, 0, 36), // "OrgFreedesktopLogin1ManagerIn..."
QT_MOC_LITERAL(1, 37, 18), // "PrepareForShutdown"
QT_MOC_LITERAL(2, 56, 0), // ""
QT_MOC_LITERAL(3, 57, 6), // "active"
QT_MOC_LITERAL(4, 64, 15), // "PrepareForSleep"
QT_MOC_LITERAL(5, 80, 7), // "SeatNew"
QT_MOC_LITERAL(6, 88, 2), // "id"
QT_MOC_LITERAL(7, 91, 15), // "QDBusObjectPath"
QT_MOC_LITERAL(8, 107, 4), // "path"
QT_MOC_LITERAL(9, 112, 11), // "SeatRemoved"
QT_MOC_LITERAL(10, 124, 10), // "SessionNew"
QT_MOC_LITERAL(11, 135, 14), // "SessionRemoved"
QT_MOC_LITERAL(12, 150, 7), // "UserNew"
QT_MOC_LITERAL(13, 158, 3), // "uid"
QT_MOC_LITERAL(14, 162, 11), // "UserRemoved"
QT_MOC_LITERAL(15, 174, 15), // "ActivateSession"
QT_MOC_LITERAL(16, 190, 19), // "QDBusPendingReply<>"
QT_MOC_LITERAL(17, 210, 21), // "ActivateSessionOnSeat"
QT_MOC_LITERAL(18, 232, 4), // "seat"
QT_MOC_LITERAL(19, 237, 12), // "AttachDevice"
QT_MOC_LITERAL(20, 250, 5), // "sysfs"
QT_MOC_LITERAL(21, 256, 11), // "interactive"
QT_MOC_LITERAL(22, 268, 12), // "CanHibernate"
QT_MOC_LITERAL(23, 281, 26), // "QDBusPendingReply<QString>"
QT_MOC_LITERAL(24, 308, 14), // "CanHybridSleep"
QT_MOC_LITERAL(25, 323, 11), // "CanPowerOff"
QT_MOC_LITERAL(26, 335, 9), // "CanReboot"
QT_MOC_LITERAL(27, 345, 10), // "CanSuspend"
QT_MOC_LITERAL(28, 356, 12), // "FlushDevices"
QT_MOC_LITERAL(29, 369, 7), // "GetSeat"
QT_MOC_LITERAL(30, 377, 34), // "QDBusPendingReply<QDBusObject..."
QT_MOC_LITERAL(31, 412, 10), // "GetSession"
QT_MOC_LITERAL(32, 423, 15), // "GetSessionByPID"
QT_MOC_LITERAL(33, 439, 3), // "pid"
QT_MOC_LITERAL(34, 443, 7), // "GetUser"
QT_MOC_LITERAL(35, 451, 12), // "GetUserByPID"
QT_MOC_LITERAL(36, 464, 9), // "Hibernate"
QT_MOC_LITERAL(37, 474, 11), // "HybridSleep"
QT_MOC_LITERAL(38, 486, 7), // "Inhibit"
QT_MOC_LITERAL(39, 494, 42), // "QDBusPendingReply<QDBusUnixFi..."
QT_MOC_LITERAL(40, 537, 4), // "what"
QT_MOC_LITERAL(41, 542, 3), // "who"
QT_MOC_LITERAL(42, 546, 3), // "why"
QT_MOC_LITERAL(43, 550, 4), // "mode"
QT_MOC_LITERAL(44, 555, 11), // "KillSession"
QT_MOC_LITERAL(45, 567, 6), // "signal"
QT_MOC_LITERAL(46, 574, 8), // "KillUser"
QT_MOC_LITERAL(47, 583, 11), // "LockSession"
QT_MOC_LITERAL(48, 595, 12), // "LockSessions"
QT_MOC_LITERAL(49, 608, 8), // "PowerOff"
QT_MOC_LITERAL(50, 617, 6), // "Reboot"
QT_MOC_LITERAL(51, 624, 14), // "ReleaseSession"
QT_MOC_LITERAL(52, 639, 13), // "SetUserLinger"
QT_MOC_LITERAL(53, 653, 1), // "b"
QT_MOC_LITERAL(54, 655, 7), // "Suspend"
QT_MOC_LITERAL(55, 663, 13), // "TerminateSeat"
QT_MOC_LITERAL(56, 677, 16), // "TerminateSession"
QT_MOC_LITERAL(57, 694, 13), // "TerminateUser"
QT_MOC_LITERAL(58, 708, 13), // "UnlockSession"
QT_MOC_LITERAL(59, 722, 14), // "UnlockSessions"
QT_MOC_LITERAL(60, 737, 14), // "BlockInhibited"
QT_MOC_LITERAL(61, 752, 14), // "DelayInhibited"
QT_MOC_LITERAL(62, 767, 18), // "HandleHibernateKey"
QT_MOC_LITERAL(63, 786, 15), // "HandleLidSwitch"
QT_MOC_LITERAL(64, 802, 14), // "HandlePowerKey"
QT_MOC_LITERAL(65, 817, 16), // "HandleSuspendKey"
QT_MOC_LITERAL(66, 834, 10), // "IdleAction"
QT_MOC_LITERAL(67, 845, 14), // "IdleActionUSec"
QT_MOC_LITERAL(68, 860, 8), // "IdleHint"
QT_MOC_LITERAL(69, 869, 13), // "IdleSinceHint"
QT_MOC_LITERAL(70, 883, 22), // "IdleSinceHintMonotonic"
QT_MOC_LITERAL(71, 906, 19), // "InhibitDelayMaxUSec"
QT_MOC_LITERAL(72, 926, 16), // "KillExcludeUsers"
QT_MOC_LITERAL(73, 943, 13), // "KillOnlyUsers"
QT_MOC_LITERAL(74, 957, 17), // "KillUserProcesses"
QT_MOC_LITERAL(75, 975, 8), // "NAutoVTs"
QT_MOC_LITERAL(76, 984, 20), // "PreparingForShutdown"
QT_MOC_LITERAL(77, 1005, 17) // "PreparingForSleep"

    },
    "OrgFreedesktopLogin1ManagerInterface\0"
    "PrepareForShutdown\0\0active\0PrepareForSleep\0"
    "SeatNew\0id\0QDBusObjectPath\0path\0"
    "SeatRemoved\0SessionNew\0SessionRemoved\0"
    "UserNew\0uid\0UserRemoved\0ActivateSession\0"
    "QDBusPendingReply<>\0ActivateSessionOnSeat\0"
    "seat\0AttachDevice\0sysfs\0interactive\0"
    "CanHibernate\0QDBusPendingReply<QString>\0"
    "CanHybridSleep\0CanPowerOff\0CanReboot\0"
    "CanSuspend\0FlushDevices\0GetSeat\0"
    "QDBusPendingReply<QDBusObjectPath>\0"
    "GetSession\0GetSessionByPID\0pid\0GetUser\0"
    "GetUserByPID\0Hibernate\0HybridSleep\0"
    "Inhibit\0QDBusPendingReply<QDBusUnixFileDescriptor>\0"
    "what\0who\0why\0mode\0KillSession\0signal\0"
    "KillUser\0LockSession\0LockSessions\0"
    "PowerOff\0Reboot\0ReleaseSession\0"
    "SetUserLinger\0b\0Suspend\0TerminateSeat\0"
    "TerminateSession\0TerminateUser\0"
    "UnlockSession\0UnlockSessions\0"
    "BlockInhibited\0DelayInhibited\0"
    "HandleHibernateKey\0HandleLidSwitch\0"
    "HandlePowerKey\0HandleSuspendKey\0"
    "IdleAction\0IdleActionUSec\0IdleHint\0"
    "IdleSinceHint\0IdleSinceHintMonotonic\0"
    "InhibitDelayMaxUSec\0KillExcludeUsers\0"
    "KillOnlyUsers\0KillUserProcesses\0"
    "NAutoVTs\0PreparingForShutdown\0"
    "PreparingForSleep"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OrgFreedesktopLogin1ManagerInterface[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      39,   14, // methods
      18,  346, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       8,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,  209,    2, 0x06 /* Public */,
       4,    1,  212,    2, 0x06 /* Public */,
       5,    2,  215,    2, 0x06 /* Public */,
       9,    2,  220,    2, 0x06 /* Public */,
      10,    2,  225,    2, 0x06 /* Public */,
      11,    2,  230,    2, 0x06 /* Public */,
      12,    2,  235,    2, 0x06 /* Public */,
      14,    2,  240,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      15,    1,  245,    2, 0x0a /* Public */,
      17,    2,  248,    2, 0x0a /* Public */,
      19,    3,  253,    2, 0x0a /* Public */,
      22,    0,  260,    2, 0x0a /* Public */,
      24,    0,  261,    2, 0x0a /* Public */,
      25,    0,  262,    2, 0x0a /* Public */,
      26,    0,  263,    2, 0x0a /* Public */,
      27,    0,  264,    2, 0x0a /* Public */,
      28,    1,  265,    2, 0x0a /* Public */,
      29,    1,  268,    2, 0x0a /* Public */,
      31,    1,  271,    2, 0x0a /* Public */,
      32,    1,  274,    2, 0x0a /* Public */,
      34,    1,  277,    2, 0x0a /* Public */,
      35,    1,  280,    2, 0x0a /* Public */,
      36,    1,  283,    2, 0x0a /* Public */,
      37,    1,  286,    2, 0x0a /* Public */,
      38,    4,  289,    2, 0x0a /* Public */,
      44,    3,  298,    2, 0x0a /* Public */,
      46,    2,  305,    2, 0x0a /* Public */,
      47,    1,  310,    2, 0x0a /* Public */,
      48,    0,  313,    2, 0x0a /* Public */,
      49,    1,  314,    2, 0x0a /* Public */,
      50,    1,  317,    2, 0x0a /* Public */,
      51,    1,  320,    2, 0x0a /* Public */,
      52,    3,  323,    2, 0x0a /* Public */,
      54,    1,  330,    2, 0x0a /* Public */,
      55,    1,  333,    2, 0x0a /* Public */,
      56,    1,  336,    2, 0x0a /* Public */,
      57,    1,  339,    2, 0x0a /* Public */,
      58,    1,  342,    2, 0x0a /* Public */,
      59,    0,  345,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 7,    6,    8,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 7,    6,    8,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 7,    6,    8,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 7,    6,    8,
    QMetaType::Void, QMetaType::UInt, 0x80000000 | 7,   13,    8,
    QMetaType::Void, QMetaType::UInt, 0x80000000 | 7,   13,    8,

 // slots: parameters
    0x80000000 | 16, QMetaType::QString,    6,
    0x80000000 | 16, QMetaType::QString, QMetaType::QString,    6,   18,
    0x80000000 | 16, QMetaType::QString, QMetaType::QString, QMetaType::Bool,   18,   20,   21,
    0x80000000 | 23,
    0x80000000 | 23,
    0x80000000 | 23,
    0x80000000 | 23,
    0x80000000 | 23,
    0x80000000 | 16, QMetaType::Bool,   21,
    0x80000000 | 30, QMetaType::QString,    6,
    0x80000000 | 30, QMetaType::QString,    6,
    0x80000000 | 30, QMetaType::UInt,   33,
    0x80000000 | 30, QMetaType::UInt,   13,
    0x80000000 | 30, QMetaType::UInt,   33,
    0x80000000 | 16, QMetaType::Bool,   21,
    0x80000000 | 16, QMetaType::Bool,   21,
    0x80000000 | 39, QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString,   40,   41,   42,   43,
    0x80000000 | 16, QMetaType::QString, QMetaType::QString, QMetaType::QString,    6,   41,   45,
    0x80000000 | 16, QMetaType::UInt, QMetaType::QString,   13,   45,
    0x80000000 | 16, QMetaType::QString,    6,
    0x80000000 | 16,
    0x80000000 | 16, QMetaType::Bool,   21,
    0x80000000 | 16, QMetaType::Bool,   21,
    0x80000000 | 16, QMetaType::QString,    6,
    0x80000000 | 16, QMetaType::UInt, QMetaType::Bool, QMetaType::Bool,   13,   53,   21,
    0x80000000 | 16, QMetaType::Bool,   21,
    0x80000000 | 16, QMetaType::QString,    6,
    0x80000000 | 16, QMetaType::QString,    6,
    0x80000000 | 16, QMetaType::UInt,   13,
    0x80000000 | 16, QMetaType::QString,    6,
    0x80000000 | 16,

 // properties: name, type, flags
      60, QMetaType::QString, 0x00095001,
      61, QMetaType::QString, 0x00095001,
      62, QMetaType::QString, 0x00095001,
      63, QMetaType::QString, 0x00095001,
      64, QMetaType::QString, 0x00095001,
      65, QMetaType::QString, 0x00095001,
      66, QMetaType::QString, 0x00095001,
      67, QMetaType::ULongLong, 0x00095001,
      68, QMetaType::Bool, 0x00095001,
      69, QMetaType::ULongLong, 0x00095001,
      70, QMetaType::ULongLong, 0x00095001,
      71, QMetaType::ULongLong, 0x00095001,
      72, QMetaType::QStringList, 0x00095001,
      73, QMetaType::QStringList, 0x00095001,
      74, QMetaType::Bool, 0x00095001,
      75, QMetaType::UInt, 0x00095001,
      76, QMetaType::Bool, 0x00095001,
      77, QMetaType::Bool, 0x00095001,

       0        // eod
};

void OrgFreedesktopLogin1ManagerInterface::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        OrgFreedesktopLogin1ManagerInterface *_t = static_cast<OrgFreedesktopLogin1ManagerInterface *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->PrepareForShutdown((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 1: _t->PrepareForSleep((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 2: _t->SeatNew((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QDBusObjectPath(*)>(_a[2]))); break;
        case 3: _t->SeatRemoved((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QDBusObjectPath(*)>(_a[2]))); break;
        case 4: _t->SessionNew((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QDBusObjectPath(*)>(_a[2]))); break;
        case 5: _t->SessionRemoved((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QDBusObjectPath(*)>(_a[2]))); break;
        case 6: _t->UserNew((*reinterpret_cast< uint(*)>(_a[1])),(*reinterpret_cast< const QDBusObjectPath(*)>(_a[2]))); break;
        case 7: _t->UserRemoved((*reinterpret_cast< uint(*)>(_a[1])),(*reinterpret_cast< const QDBusObjectPath(*)>(_a[2]))); break;
        case 8: { QDBusPendingReply<> _r = _t->ActivateSession((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 9: { QDBusPendingReply<> _r = _t->ActivateSessionOnSeat((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 10: { QDBusPendingReply<> _r = _t->AttachDevice((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 11: { QDBusPendingReply<QString> _r = _t->CanHibernate();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = _r; }  break;
        case 12: { QDBusPendingReply<QString> _r = _t->CanHybridSleep();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = _r; }  break;
        case 13: { QDBusPendingReply<QString> _r = _t->CanPowerOff();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = _r; }  break;
        case 14: { QDBusPendingReply<QString> _r = _t->CanReboot();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = _r; }  break;
        case 15: { QDBusPendingReply<QString> _r = _t->CanSuspend();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QString>*>(_a[0]) = _r; }  break;
        case 16: { QDBusPendingReply<> _r = _t->FlushDevices((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 17: { QDBusPendingReply<QDBusObjectPath> _r = _t->GetSeat((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QDBusObjectPath>*>(_a[0]) = _r; }  break;
        case 18: { QDBusPendingReply<QDBusObjectPath> _r = _t->GetSession((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QDBusObjectPath>*>(_a[0]) = _r; }  break;
        case 19: { QDBusPendingReply<QDBusObjectPath> _r = _t->GetSessionByPID((*reinterpret_cast< uint(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QDBusObjectPath>*>(_a[0]) = _r; }  break;
        case 20: { QDBusPendingReply<QDBusObjectPath> _r = _t->GetUser((*reinterpret_cast< uint(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QDBusObjectPath>*>(_a[0]) = _r; }  break;
        case 21: { QDBusPendingReply<QDBusObjectPath> _r = _t->GetUserByPID((*reinterpret_cast< uint(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QDBusObjectPath>*>(_a[0]) = _r; }  break;
        case 22: { QDBusPendingReply<> _r = _t->Hibernate((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 23: { QDBusPendingReply<> _r = _t->HybridSleep((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 24: { QDBusPendingReply<QDBusUnixFileDescriptor> _r = _t->Inhibit((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])),(*reinterpret_cast< const QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<QDBusUnixFileDescriptor>*>(_a[0]) = _r; }  break;
        case 25: { QDBusPendingReply<> _r = _t->KillSession((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 26: { QDBusPendingReply<> _r = _t->KillUser((*reinterpret_cast< uint(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 27: { QDBusPendingReply<> _r = _t->LockSession((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 28: { QDBusPendingReply<> _r = _t->LockSessions();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 29: { QDBusPendingReply<> _r = _t->PowerOff((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 30: { QDBusPendingReply<> _r = _t->Reboot((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 31: { QDBusPendingReply<> _r = _t->ReleaseSession((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 32: { QDBusPendingReply<> _r = _t->SetUserLinger((*reinterpret_cast< uint(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 33: { QDBusPendingReply<> _r = _t->Suspend((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 34: { QDBusPendingReply<> _r = _t->TerminateSeat((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 35: { QDBusPendingReply<> _r = _t->TerminateSession((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 36: { QDBusPendingReply<> _r = _t->TerminateUser((*reinterpret_cast< uint(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 37: { QDBusPendingReply<> _r = _t->UnlockSession((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        case 38: { QDBusPendingReply<> _r = _t->UnlockSessions();
            if (_a[0]) *reinterpret_cast< QDBusPendingReply<>*>(_a[0]) = _r; }  break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 2:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QDBusObjectPath >(); break;
            }
            break;
        case 3:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QDBusObjectPath >(); break;
            }
            break;
        case 4:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QDBusObjectPath >(); break;
            }
            break;
        case 5:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QDBusObjectPath >(); break;
            }
            break;
        case 6:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QDBusObjectPath >(); break;
            }
            break;
        case 7:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QDBusObjectPath >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(bool );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::PrepareForShutdown)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(bool );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::PrepareForSleep)) {
                *result = 1;
                return;
            }
        }
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(const QString & , const QDBusObjectPath & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::SeatNew)) {
                *result = 2;
                return;
            }
        }
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(const QString & , const QDBusObjectPath & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::SeatRemoved)) {
                *result = 3;
                return;
            }
        }
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(const QString & , const QDBusObjectPath & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::SessionNew)) {
                *result = 4;
                return;
            }
        }
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(const QString & , const QDBusObjectPath & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::SessionRemoved)) {
                *result = 5;
                return;
            }
        }
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(uint , const QDBusObjectPath & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::UserNew)) {
                *result = 6;
                return;
            }
        }
        {
            typedef void (OrgFreedesktopLogin1ManagerInterface::*_t)(uint , const QDBusObjectPath & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&OrgFreedesktopLogin1ManagerInterface::UserRemoved)) {
                *result = 7;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        OrgFreedesktopLogin1ManagerInterface *_t = static_cast<OrgFreedesktopLogin1ManagerInterface *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QString*>(_v) = _t->blockInhibited(); break;
        case 1: *reinterpret_cast< QString*>(_v) = _t->delayInhibited(); break;
        case 2: *reinterpret_cast< QString*>(_v) = _t->handleHibernateKey(); break;
        case 3: *reinterpret_cast< QString*>(_v) = _t->handleLidSwitch(); break;
        case 4: *reinterpret_cast< QString*>(_v) = _t->handlePowerKey(); break;
        case 5: *reinterpret_cast< QString*>(_v) = _t->handleSuspendKey(); break;
        case 6: *reinterpret_cast< QString*>(_v) = _t->idleAction(); break;
        case 7: *reinterpret_cast< qulonglong*>(_v) = _t->idleActionUSec(); break;
        case 8: *reinterpret_cast< bool*>(_v) = _t->idleHint(); break;
        case 9: *reinterpret_cast< qulonglong*>(_v) = _t->idleSinceHint(); break;
        case 10: *reinterpret_cast< qulonglong*>(_v) = _t->idleSinceHintMonotonic(); break;
        case 11: *reinterpret_cast< qulonglong*>(_v) = _t->inhibitDelayMaxUSec(); break;
        case 12: *reinterpret_cast< QStringList*>(_v) = _t->killExcludeUsers(); break;
        case 13: *reinterpret_cast< QStringList*>(_v) = _t->killOnlyUsers(); break;
        case 14: *reinterpret_cast< bool*>(_v) = _t->killUserProcesses(); break;
        case 15: *reinterpret_cast< uint*>(_v) = _t->nAutoVTs(); break;
        case 16: *reinterpret_cast< bool*>(_v) = _t->preparingForShutdown(); break;
        case 17: *reinterpret_cast< bool*>(_v) = _t->preparingForSleep(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

const QMetaObject OrgFreedesktopLogin1ManagerInterface::staticMetaObject = {
    { &QDBusAbstractInterface::staticMetaObject, qt_meta_stringdata_OrgFreedesktopLogin1ManagerInterface.data,
      qt_meta_data_OrgFreedesktopLogin1ManagerInterface,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *OrgFreedesktopLogin1ManagerInterface::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OrgFreedesktopLogin1ManagerInterface::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_OrgFreedesktopLogin1ManagerInterface.stringdata0))
        return static_cast<void*>(const_cast< OrgFreedesktopLogin1ManagerInterface*>(this));
    return QDBusAbstractInterface::qt_metacast(_clname);
}

int OrgFreedesktopLogin1ManagerInterface::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDBusAbstractInterface::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 39)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 39;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 39)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 39;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 18;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 18;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 18;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 18;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 18;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 18;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void OrgFreedesktopLogin1ManagerInterface::PrepareForShutdown(bool _t1)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void OrgFreedesktopLogin1ManagerInterface::PrepareForSleep(bool _t1)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void OrgFreedesktopLogin1ManagerInterface::SeatNew(const QString & _t1, const QDBusObjectPath & _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void OrgFreedesktopLogin1ManagerInterface::SeatRemoved(const QString & _t1, const QDBusObjectPath & _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void OrgFreedesktopLogin1ManagerInterface::SessionNew(const QString & _t1, const QDBusObjectPath & _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}

// SIGNAL 5
void OrgFreedesktopLogin1ManagerInterface::SessionRemoved(const QString & _t1, const QDBusObjectPath & _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 5, _a);
}

// SIGNAL 6
void OrgFreedesktopLogin1ManagerInterface::UserNew(uint _t1, const QDBusObjectPath & _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 6, _a);
}

// SIGNAL 7
void OrgFreedesktopLogin1ManagerInterface::UserRemoved(uint _t1, const QDBusObjectPath & _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 7, _a);
}
QT_END_MOC_NAMESPACE
