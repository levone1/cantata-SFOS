/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -p policyagentinterface /home/defaultuser/Downloads/tmp/cantata-2.4.1/dbus/org.kde.Solid.PowerManagement.PolicyAgent.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef POLICYAGENTINTERFACE_H
#define POLICYAGENTINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.Solid.PowerManagement.PolicyAgent
 */
class OrgKdeSolidPowerManagementPolicyAgentInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.Solid.PowerManagement.PolicyAgent"; }

public:
    OrgKdeSolidPowerManagementPolicyAgentInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgKdeSolidPowerManagementPolicyAgentInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<uint> AddInhibition(uint in0, const QString &in1, const QString &in2)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(in0) << QVariant::fromValue(in1) << QVariant::fromValue(in2);
        return asyncCallWithArgumentList(QStringLiteral("AddInhibition"), argumentList);
    }

    inline QDBusPendingReply<> ReleaseInhibition(uint in0)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(in0);
        return asyncCallWithArgumentList(QStringLiteral("ReleaseInhibition"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace kde {
    namespace Solid {
      namespace PowerManagement {
        typedef ::OrgKdeSolidPowerManagementPolicyAgentInterface PolicyAgent;
      }
    }
  }
}
#endif
